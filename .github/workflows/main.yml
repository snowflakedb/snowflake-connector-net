# This is a basic workflow to help you get started with Actions

name: DotNet Build and Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      logLevel:
        default: warning
        description: "Log level"
        required: true
      tags:
        description: "Test scenario tags"

env:
  DOTNET_CORE_VERSION: 2.0
  DOTNET_LEGACY_VERSION: 4.6

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-core:
    name: Build-Core
    # The type of runner that the job will run on
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet: ['2.2.402']
        cloud_env: ['AZURE', 'GCP', 'AWS']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      #Setup .NET
      - uses: actions/checkout@main
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
      - name: Decrypt Parameters
        shell: bash
        env:
           PARAMETER_SECRET: ${{ secrets.PARAMETER_SECRET }}
        run: |
           gpg --quiet --batch --yes --decrypt --passphrase="$PARAMETER_SECRET" \
            ./.github/workflows/parameters/parameters_${{ matrix.cloud_env }}.json.gpg > Snowflake.Data.Tests/parameters.json
      - name: Clean-up before build
        run: dotnet clean snowflake-connector-net.sln && dotnet nuget locals all --clear
      - name: Build Driver
        run: dotnet build snowflake-connector-net.sln /p:DebugType=Full

  build-framework:
    name: Build-Framework
    runs-on: windows-latest
    strategy:
      matrix:
        cloud_env: ['AZURE', 'GCP', 'AWS']

    steps:
    - uses: actions/checkout@v1
    - name: Setup Nuget.exe
      uses: nuget/setup-nuget@v1
    - name: Restore packages
      run: nuget restore
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Decrypt Azure Parameters
      shell: bash
      env:
         PARAMETER_SECRET: ${{ secrets.PARAMETER_SECRET }}
      run: |
         gpg --quiet --batch --yes --decrypt --passphrase="$PARAMETER_SECRET" \
          ./.github/workflows/parameters/parameters_${{ matrix.cloud_env }}.json.gpg > Snowflake.Data.Tests/parameters.json
    - name: Build with MSBuild
      run: msbuild snowflake-connector-net.sln -p:Configuration=Release

  test:
    needs: build-core
    name: Tests on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        #dotnet: ['2.2.402']
        dotnet: ['netcoreapp2.0', 'net46']
        cloud_env: ['AZURE', 'GCP', 'AWS']
    steps:
      - uses: actions/checkout@main
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.2.402
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Before Test
        run: nuget install OpenCover -Version 4.6.519
      - name: Decrypt Parameters
        shell: bash
        env:
           PARAMETER_SECRET: ${{ secrets.PARAMETER_SECRET }}
        run: |
           gpg --quiet --batch --yes --decrypt --passphrase="$PARAMETER_SECRET" \
            ./.github/workflows/parameters/parameters_${{ matrix.cloud_env }}.json.gpg > Snowflake.Data.Tests/parameters.json
      - name: Run Opencover
        run: |
          cd Snowflake.Data.Tests
          ..\OpenCover.4.6.519\tools\OpenCover.Console.exe -target:"C:\Program Files\dotnet\dotnet.exe" -returntargetcode -targetargs:"test -f ${{ matrix.dotnet }} -v n" -register:user -filter:"+[Snowflake.Data]*" -output:"${{ matrix.dotnet }}_${{ matrix.cloud_env }}_coverage.xml" -oldStyle
        env:
          snowflake_cloud_env: ${{ matrix.cloud_env }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: Snowflake.Data.Tests\${{ matrix.dotnet }}_${{ matrix.cloud_env }}_coverage.xml
      - name: Install Codecov
        run: pip install codecov
      - name: Run Codecoverage
        run: codecov -f Snowflake.Data.Tests\${{ matrix.dotnet }}_${{ matrix.cloud_env }}_coverage.xml -t ffc6a21d-8176-4849-9047-e3a631dcd35a
